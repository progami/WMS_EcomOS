---
- name: Backup WMS Database
  hosts: wms_servers[0]
  become: yes
  vars:
    backup_timestamp: "{{ ansible_date_time.epoch }}"
    backup_filename: "wms-backup-{{ backup_timestamp }}.sql"
  
  tasks:
    - name: Create backup directory
      file:
        path: /tmp/wms-backups
        state: directory
        mode: '0700'
        owner: "{{ ansible_user }}"

    - name: Backup PostgreSQL database
      postgresql_db:
        name: "{{ database_name }}"
        state: dump
        target: "/tmp/wms-backups/{{ backup_filename }}"
      become_user: postgres
      when: not use_rds

    - name: Backup RDS database
      shell: |
        PGPASSWORD={{ database_password }} pg_dump \
          -h {{ database_host }} \
          -p {{ database_port }} \
          -U {{ database_user }} \
          -d {{ database_name }} \
          -f /tmp/wms-backups/{{ backup_filename }}
      when: use_rds

    - name: Compress backup
      archive:
        path: "/tmp/wms-backups/{{ backup_filename }}"
        dest: "/tmp/wms-backups/{{ backup_filename }}.gz"
        format: gz
        remove: yes

    - name: Upload to S3 (if configured)
      amazon.aws.s3_object:
        bucket: "{{ backup_bucket }}"
        object: "database/{{ ansible_date_time.year }}/{{ ansible_date_time.month }}/{{ backup_filename }}.gz"
        src: "/tmp/wms-backups/{{ backup_filename }}.gz"
        mode: put
      when: backup_bucket is defined

    - name: Clean up local backup
      file:
        path: "/tmp/wms-backups/{{ backup_filename }}.gz"
        state: absent
      when: backup_bucket is defined

    - name: Remove old local backups
      find:
        paths: /tmp/wms-backups
        patterns: "*.gz"
        age: "7d"
      register: old_backups

    - name: Delete old backups
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ old_backups.files }}"