---
- name: Setup WMS Infrastructure
  hosts: wms_servers
  become: yes
  
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install system dependencies
      apt:
        name:
          - build-essential
          - curl
          - git
          - nginx
          - postgresql-client
          - python3-psycopg2
          - redis-tools
          - ufw
        state: present

    - name: Install Node.js repository
      shell: curl -fsSL https://deb.nodesource.com/setup_{{ node_version }}.x | bash -
      args:
        creates: /etc/apt/sources.list.d/nodesource.list

    - name: Install Node.js
      apt:
        name: nodejs
        state: present

    - name: Install PM2 globally
      npm:
        name: pm2
        global: yes
        state: present

    - name: Setup PM2 startup script
      command: pm2 startup systemd -u {{ ansible_user }} --hp /home/{{ ansible_user }}
      args:
        creates: /etc/systemd/system/pm2-{{ ansible_user }}.service

    - name: Install PostgreSQL (if not using RDS)
      apt:
        name:
          - postgresql
          - postgresql-contrib
        state: present
      when: not use_rds

    - name: Setup PostgreSQL database (if not using RDS)
      block:
        - name: Create database user
          postgresql_user:
            name: "{{ database_user }}"
            password: "{{ database_password | default(lookup('password', '/dev/null chars=ascii_letters,digits length=32')) }}"
            state: present
          become_user: postgres

        - name: Create database
          postgresql_db:
            name: "{{ database_name }}"
            owner: "{{ database_user }}"
            state: present
          become_user: postgres
      when: not use_rds

    - name: Configure UFW firewall
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      loop:
        - "22"
        - "80"
        - "443"

    - name: Enable UFW
      ufw:
        state: enabled

    - name: Create log directory
      file:
        path: "{{ app_directory }}/logs"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'

    - name: Setup logrotate for application logs
      template:
        src: logrotate.j2
        dest: /etc/logrotate.d/wms