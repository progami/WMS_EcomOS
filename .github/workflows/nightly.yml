name: Nightly Build and Test

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  POSTGRES_VERSION: '15'

jobs:
  full-test-suite:
    name: Full Test Suite
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wms_nightly_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/wms_nightly_test
        run: |
          npx prisma migrate deploy
          npx prisma db seed

      - name: Run all tests with coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/wms_nightly_test
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: test-secret-key
          NODE_ENV: test
        run: npm run test:all

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: nightly
          name: nightly-coverage

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wms_perf_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database with large dataset
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/wms_perf_test
        run: |
          npx prisma migrate deploy
          npx prisma db seed
          # Run performance seed script if available
          npm run seed:performance || true

      - name: Build application
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/wms_perf_test
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: test-secret-key
        run: npm run build

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/operations/inventory
            http://localhost:3000/operations/transactions
          uploadArtifacts: true
          temporaryPublicStorage: true

  dependency-check:
    name: Dependency Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Check for dependency updates
        run: |
          npx npm-check-updates -u --target minor
          npm audit fix --audit-level=high || true

      - name: Create PR for updates
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: '[Automated] Dependency Updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains minor version updates for project dependencies.
            
            ### Changes
            - Minor version updates only
            - Security fixes applied where available
            
            Please review and test before merging.
          branch: automated/dependency-updates
          delete-branch: true

  database-backup:
    name: Database Schema Backup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate schema snapshot
        run: |
          npx prisma generate
          npx prisma migrate diff --from-empty --to-schema-datamodel prisma/schema.prisma > schema-snapshot.sql
          
      - name: Upload schema snapshot
        uses: actions/upload-artifact@v3
        with:
          name: schema-snapshot-${{ github.run_number }}
          path: schema-snapshot.sql
          retention-days: 30

  compatibility-matrix:
    name: Compatibility Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x', '20.x', '21.x']
        postgres-version: ['14', '15', '16']
    
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wms_compat_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/wms_compat_test
        run: |
          npx prisma migrate deploy
          npx prisma db seed

      - name: Run smoke tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/wms_compat_test
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: test-secret-key
          NODE_ENV: test
        run: npm run test:smoke || npm run test -- --testNamePattern="smoke"

  notify-failures:
    name: Notify on Failures
    runs-on: ubuntu-latest
    needs: [full-test-suite, performance-tests, dependency-check, compatibility-matrix]
    if: failure()
    steps:
      - name: Send notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'Nightly build failed! Check the logs for details.'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}