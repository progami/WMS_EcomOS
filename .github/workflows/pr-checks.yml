name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  label-pr:
    name: Label PR
    runs-on: ubuntu-latest
    steps:
      - name: Label PR based on files changed
        uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          configuration-path: .github/labeler.yml

  check-pr-title:
    name: Check PR Title
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title follows conventional commits
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.

  check-branch-name:
    name: Check Branch Name
    runs-on: ubuntu-latest
    steps:
      - name: Check branch name
        uses: deepakputhraya/action-branch-name@master
        with:
          regex: '^(feature|bugfix|hotfix|release|chore)\/[a-z0-9-]+$'
          allowed_prefixes: 'feature,bugfix,hotfix,release,chore'
          ignore: main,develop
          min_length: 5
          max_length: 50

  size-label:
    name: Add Size Label
    runs-on: ubuntu-latest
    steps:
      - name: Add size label
        uses: codelytv/pr-size-labeler@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          xs_label: 'size/XS'
          xs_max_size: '10'
          s_label: 'size/S'
          s_max_size: '100'
          m_label: 'size/M'
          m_max_size: '500'
          l_label: 'size/L'
          l_max_size: '1000'
          xl_label: 'size/XL'
          fail_if_xl: false

  check-files:
    name: Check Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for large files
        run: |
          # Find files larger than 1MB
          large_files=$(find . -type f -size +1M | grep -v -E '(node_modules|\.git|\.next|dist|build)' || true)
          if [ -n "$large_files" ]; then
            echo "::error::Large files detected (>1MB):"
            echo "$large_files"
            exit 1
          fi

      - name: Check for sensitive data
        run: |
          # Check for potential secrets
          if grep -r -E "(api_key|apikey|api-key|secret|password|token)" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" --exclude-dir=node_modules --exclude-dir=.git --exclude-dir=tests .; then
            echo "::warning::Potential sensitive data detected. Please review."
          fi

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint -- --format=checkstyle --output-file=eslint-results.xml || true

      - name: Annotate with ESLint results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "eslint-results.xml"

      - name: Check TypeScript
        run: npm run typecheck

      - name: Check for unused dependencies
        run: npx depcheck --ignores="@types/*"

  test-coverage-diff:
    name: Test Coverage Diff
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: wms_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/wms_test
        run: |
          npx prisma migrate deploy

      - name: Run tests with coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/wms_test
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: test-secret-key
          NODE_ENV: test
        run: npm run test:coverage

      - name: Generate coverage report
        uses: 5monkeys/cobertura-action@master
        with:
          path: coverage/cobertura-coverage.xml
          minimum_coverage: 40
          fail_below_threshold: false

  pr-comment:
    name: PR Comment
    runs-on: ubuntu-latest
    needs: [test-coverage-diff, code-quality]
    if: always()
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '## PR Check Results'

      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## PR Check Results
            
            | Check | Status |
            |-------|--------|
            | Code Quality | ${{ needs.code-quality.result == 'success' && '✅ Passed' || '❌ Failed' }} |
            | Test Coverage | ${{ needs.test-coverage-diff.result == 'success' && '✅ Passed' || '❌ Failed' }} |
            
            <details>
            <summary>Details</summary>
            
            - **PR Title**: ${{ github.event.pull_request.title }}
            - **Branch**: ${{ github.event.pull_request.head.ref }}
            - **Commits**: ${{ github.event.pull_request.commits }}
            - **Files Changed**: ${{ github.event.pull_request.changed_files }}
            - **Lines**: +${{ github.event.pull_request.additions }} -${{ github.event.pull_request.deletions }}
            
            </details>
            
            ---
            *Last updated: ${{ github.event.pull_request.updated_at }}*
          edit-mode: replace