name: Nightly Tests

on:
  schedule:
    # Run at 2 AM UTC every day
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  full-test-suite:
    name: Full Test Suite
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: warehouse_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Setup database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/warehouse_test
        run: |
          npx prisma db push --skip-generate --accept-data-loss
          npx prisma db seed

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Build application
        run: npm run build

      - name: Run all E2E tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/warehouse_test
          NEXTAUTH_SECRET: test-secret-for-ci-only
          NEXTAUTH_URL: http://localhost:3000
          CI: true
        run: npm run test:e2e

      - name: Generate test report
        if: always()
        run: |
          echo "# Nightly Test Report" > test-report.md
          echo "Date: $(date)" >> test-report.md
          echo "" >> test-report.md
          
          if [ -f coverage/coverage-summary.json ]; then
            echo "## Coverage Summary" >> test-report.md
            node -e "
              const coverage = require('./coverage/coverage-summary.json');
              const total = coverage.total;
              console.log('- Lines: ' + total.lines.pct + '%');
              console.log('- Statements: ' + total.statements.pct + '%');
              console.log('- Functions: ' + total.functions.pct + '%');
              console.log('- Branches: ' + total.branches.pct + '%');
            " >> test-report.md
          fi

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: nightly-test-results
          path: |
            coverage/
            playwright-report/
            test-results/
            test-report.md
          retention-days: 30

      - name: Notify on failure
        if: failure()
        run: |
          echo "Tests failed! Check the artifacts for details."
          # Add notification logic here (Slack, email, etc.)

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: warehouse_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Setup database
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/warehouse_test
        run: |
          npx prisma db push --skip-generate --accept-data-loss
          npx prisma db seed

      - name: Build application
        run: npm run build

      - name: Start application
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/warehouse_test
          NEXTAUTH_SECRET: test-secret-for-ci-only
          NEXTAUTH_URL: http://localhost:3000
        run: |
          npm run start &
          sleep 10

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun --collect.url=http://localhost:3000 --collect.url=http://localhost:3000/auth/login --collect.url=http://localhost:3000/dashboard || true

      - name: Check bundle size
        run: |
          echo "## Bundle Size Report" > bundle-report.md
          echo "Date: $(date)" >> bundle-report.md
          echo "" >> bundle-report.md
          
          if [ -d .next ]; then
            echo "### Page Sizes" >> bundle-report.md
            find .next/static -name "*.js" -type f -exec ls -lh {} \; | awk '{print $5 "\t" $9}' | sort -hr >> bundle-report.md
          fi

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results
          path: |
            .lighthouseci/
            bundle-report.md
          retention-days: 30