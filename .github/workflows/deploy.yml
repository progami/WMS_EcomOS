name: Deploy Artifacts to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: |
        NODE_ENV=production SKIP_ENV_VALIDATION=true npm run build
    
    - name: Create deployment package
      run: |
        # Get version from package.json
        VERSION=$(node -p "require('./package.json').version")
        
        # Create deployment package
        mkdir -p deployment-package
        
        # Copy built application
        cp -r .next deployment-package/
        cp -r public deployment-package/
        cp package*.json deployment-package/
        cp next.config.mjs deployment-package/
        cp server.js deployment-package/
        
        # Copy Prisma files
        cp -r prisma deployment-package/
        
        # Copy PM2 config
        cp ecosystem.config.js deployment-package/
        
        # Create tarball
        tar -czf deployment-${VERSION}.tar.gz deployment-package
        
        echo "DEPLOY_VERSION=${VERSION}" >> $GITHUB_ENV
        echo "DEPLOY_PACKAGE=deployment-${VERSION}.tar.gz" >> $GITHUB_ENV
    
    - name: Deploy to server
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        source: ${{ env.DEPLOY_PACKAGE }}
        target: /home/wms/deployments/incoming/
    
    - name: Execute deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          cd /home/wms/deployments
          ./deploy-production.sh incoming/${{ env.DEPLOY_PACKAGE }} ${{ env.DEPLOY_VERSION }}
